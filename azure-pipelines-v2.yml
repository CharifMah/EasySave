trigger: none

pool:
  name: 'my-agent-pool'

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  BasePath: 'EasySave-2.0/'
  CLIPath: 'EasySave-2.0/EasySave-1.0/'
  GUIPath: 'EasySave-2.0/EasySaveGUI/'
  CLISolution: '$(CLIPath)EasySave-1.0.sln'
  GUISolution: '$(GUIPath)EasySave-GUI.sln'
  PublishFolder: '$(Build.ArtifactStagingDirectory)/publish'
  CLIPublishFolder: '$(PublishFolder)/CLI'
  GUIPublishFolder: '$(PublishFolder)/GUI'

name: Release-2.0.$(Build.BuildId)

steps:
- task: UseDotNet@2
  inputs:
    version: '6.x'
    includePreviewVersions: false

# Restauration pour CLI et GUI
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(CLIPath)**/*.csproj;$(GUIPath)**/*.csproj'

# Construction pour CLI
- task: DotNetCoreCLI@2
  displayName: 'Build CLI Solution'
  inputs:
    command: 'build'
    projects: '$(CLISolution)'
    arguments: '--configuration $(BuildConfiguration)'

# Construction pour GUI
- task: DotNetCoreCLI@2
  displayName: 'Build GUI Solution'
  inputs:
    command: 'build'
    projects: '$(GUISolution)'
    arguments: '--configuration $(BuildConfiguration)'

# Tests unitaires (ajustez selon besoin)
- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: 'test'
    projects: '$(BasePath)**/UnitTest*/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

# Publication pour CLI
- task: DotNetCoreCLI@2
  displayName: 'Publish CLI Projects'
  inputs:
    command: 'publish'
    projects: '$(CLISolution)'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(CLIPublishFolder)'
    zipAfterPublish: false

# Publication pour GUI
- task: DotNetCoreCLI@2
  displayName: 'Publish GUI Projects'
  inputs:
    command: 'publish'
    projects: '$(GUISolution)'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(GUIPublishFolder)'
    zipAfterPublish: false