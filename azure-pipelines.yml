trigger:
  branches:
    include:
    - livrable-1

pool:
  name: 'my-agent-pool'

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  BasePath: 'EasySave-G4-FISA-24/'
  # Inclut BasePath dans les chemins de solution et de projet
  Solution: '$(BasePath)**/*.sln'
  RestoreBuildProjects: '$(BasePath)**/*.csproj'
  PublishProjects: '$(BasePath)**/*.csproj;-:**/*UnitTestStorage/**/*.csproj'
  TestProjects: '$(BasePath)**/*UnitTestStorage/*.csproj'
  PublishFolder: '$(Build.ArtifactStagingDirectory)/publish'

steps:
- task: UseDotNet@2
  inputs:
    version: '6.x'
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(RestoreBuildProjects)'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '$(Solution)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: 'test'
    projects: '$(TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish Projects'
  inputs:
    command: 'publish'
    publishWebProjects: false
    # variable PublishProjects pour exclure les tests de la publication
    projects: '$(PublishProjects)'
    arguments: '--configuration $(BuildConfiguration) --output $(PublishFolder)'
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: 'Archive Published Projects'
  inputs:
    rootFolderOrFile: '$(PublishFolder)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/EasySaveComplete.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: EasySaveComplete'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/EasySaveComplete.zip'
    ArtifactName: 'EasySaveComplete'
